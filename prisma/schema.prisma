// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Specify PostgreSQL as the provider
  url      = env("DATABASE_URL") // Loads the connection string from your .env file
}

// Define our KnowledgeClip model
model KnowledgeClip {
  id        String   @id @default(uuid()) 
  title     String
  content   String
  tags      String[] 
  createdAt DateTime @default(now())    
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
} 

model Session {
  id           String     @id @default(uuid())
  expires      DateTime
  userId       String
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  sessionToken String     @unique
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@id([identifier, token])
}

model Account {
  id                  String     @id @default(uuid())
  userId              String
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String?    @db.Text
  access_token        String?    @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?    @db.Text
  session_state       String?
  user                User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])

}

model User {
  id                  String    @id @default(uuid())
  name                String?
  image               String?
  email               String?   @unique
  hashedPassword      String? 
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  emailVerified       DateTime? 
  accounts            Account[]
  sessions            Session[]
  clips               KnowledgeClip[]
}